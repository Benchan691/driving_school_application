name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: driving_school_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run linting (backend)
      working-directory: ./backend
      run: npm run lint

    - name: Run linting (frontend)
      working-directory: ./frontend
      run: npm run lint || echo "Frontend linting skipped"

    - name: Run unit tests (backend)
      working-directory: ./backend
      run: npm run test:ci
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/driving_school_test
        JWT_SECRET: test_jwt_secret_for_ci
        JWT_REFRESH_SECRET: test_refresh_secret_for_ci
        ADMIN_REGISTRATION_CODE: TEST_ADMIN_CI
        TWILIO_ACCOUNT_SID: ACtest1234567890123456789012345678
        TWILIO_AUTH_TOKEN: test_auth_token
        TWILIO_PHONE_NUMBER: +1234567890
        SMTP_HOST: smtp.test.com
        SMTP_USER: test@example.com
        SMTP_PASS: test_password

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build || echo "Frontend build skipped"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: driving_school_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run integration tests
      working-directory: ./backend
      run: npm run test:integration
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/driving_school_test
        JWT_SECRET: test_jwt_secret_for_ci
        JWT_REFRESH_SECRET: test_refresh_secret_for_ci
