services:
  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_BASE=http://localhost:5002
    depends_on:
      - backend
    networks:
      - driving-school-network

  # Backend Node.js/Express application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5002
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/driving_school
      - JWT_SECRET=your_jwt_secret_here_change_in_production
      - JWT_REFRESH_SECRET=your_jwt_refresh_secret_here_change_in_production
      - STRIPE_SECRET_KEY=your_stripe_secret_key
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
      - redis
    networks:
      - driving-school-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=driving_school
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - driving-school-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - driving-school-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - driving-school-network

volumes:
  postgres_data:
  redis_data:

networks:
  driving-school-network:
    driver: bridge
